#!/usr/bin/env bash

set -euo pipefail

# Docker needs to be started from the project root
# to mount the scripts
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
pushd "$SCRIPT_DIR/.."

# What are the -c flags passed to supervisor-ctl
# The supervisor-ctl script is made so that any arguments will be passed along to the postgres server daemon
# If you pass for instance `-c` flags, you will change the postgres configuration
# -d \

## Scripts need to have execution

# Create the mount point to give it the right permissions
MOUNT_POINT="$PWD/mount"
mkdir -p "$MOUNT_POINT"
chmod 0777 "$MOUNT_POINT"

# Mount dbctl to edit it
DBCTL_PATH="$PWD/resources/dbctl/dbctl"
if [[ ! -f "$DBCTL_PATH" ]]; then
  echo_err "dbctl not found at $DBCTL_PATH"
  exit 1
fi
chmod +x "$DBCTL_PATH"

# Get the env
declare -a DOCKER_ENV_ARGS=()
IFS=',' read -ra DIRENV_EXPORTED_KEYS_AS_ARRAY <<< "$DIRENV_EXPORTED_KEYS"
for ENV in "${DIRENV_EXPORTED_KEYS_AS_ARRAY[@]}"; do
    # Filter out all docker variable
    if [[ $ENV == DOCKER* ]]; then
        continue
    fi
    if [[ -v $ENV ]]; then
        DOCKER_ENV_ARGS+=("-e $ENV=${!ENV}")
    fi
done

## Memory
# The default /dev/shm size for containers is 64MB. If the shared memory is exhausted you will encounter
# ERROR:  could not resize shared memory segment . . . : No space left on device.
# You will want to pass --shm-size=256MB

# Start the postgres database
docker run \
  --name postgres \
  --rm \
  -p "$DOCKER_POSTGRES_LOCAL_PORT":5432 \
  -p 9187:9187 \
  --user 1000:1000 \
  --group-add postgres \
  "${DOCKER_ENV_ARGS[@]}" \
  -v "${MOUNT_POINT}":/data \
  --mount type=bind,source="${DBCTL_PATH}",target=/usr/local/bin/dbctl \
  "${DOCKER_REGISTRY:-docker.io}"/"${DOCKER_USER}"/"${DOCKER_REPO}":"$DOCKER_TAG" \
  supervisor-ctl \
  -c shared_buffers=256MB \
  -c max_connections=200

popd
