#!/bin/bash

# Setting strictly bash
set -Eeuo pipefail

# The path at this point is always
source bashlib-echo.sh
source bashlib-shell.sh


#####################
# User set up
#####################
USER_UID=$(id -u)
# User is needed to change the permissions with supervisor on the socket
export USER
USER=$(whoami 2> /dev/null || echo 'noname')
export USER_GROUPS
USER_GROUPS=$(groups 2> /dev/null || echo 'nogroup')
#echo::info "To add a new group to the logged in user, use the '--add-group' option of docker"
if [ "$HOME" == '/' ] && [ "$USER_UID" != '0' ]; then
  # to avoid error with the HOME directory
  # such as `error: could not lock config file //.gitconfig: Permission denied`
  # Issue: https://gitlab.com/gitlab-org/gitlab-runner/-/issues/37408
  export HOME=/home/$USER
  echo::info "HOME: $HOME"
  if [ ! -d "$HOME" ]; then
      echo::info "Creating HOME=$HOME"
      mkdir -p "$HOME"
  fi
fi
# User with a login or non-login shell will get the same env
BASHRC_PATH=$HOME/.bashrc
if [ -f $BASHRC_PATH ]; then
  rm $BASHRC_PATH
fi
ln -s /etc/profile ~/.bashrc

#########################
# Bash Env
#########################
. /etc/profile

# Create log dirs
# The log directory are not created and just stop supervisor
# https://github.com/Supervisor/supervisor/issues/120#issuecomment-209292870
LOG_HOME=${LOG_HOME:-/var/log}
export SQL_EXPORTER_LOG=${LOG_HOME}/sql-exporter/sql-exporter.log
export POSTGRES_EXPORTER_LOG=${LOG_HOME}/postgres-exporter/postgres-exporter.log
export POSTGRES_LOG=${LOG_HOME}/postgres/postgres.log
LOGS=(
    "$SQL_EXPORTER_LOG"
    "$POSTGRES_EXPORTER_LOG"
    "$POSTGRES_LOG"
)
for LOG in "${LOGS[@]}"; do
    LOG_PARENT=$(dirname "$LOG")
    mkdir -p "$LOG_PARENT"
    touch "$LOG"
done

export POSTGRES_ARGS="${*}"
echo::info "postgres args: ${POSTGRES_ARGS}"


# The user should have the `postgres` group
# if it's not root
if [ "$(id -u)" != "0" ]; then
  if ! groups 2> /dev/null | grep postgres 2> /dev/null; then
    echo::err "The non-root user $USER should have the postgres group"
    echo::err "Resolutions"
    echo::err "  * add the postgres group to the user with the option --group-add postgres"
    echo::err "  * or if you use dockenv, add the env DOCKER_USER_GROUPS=postgres to your environment file"
    exit 1
  fi
fi

# we set the `c` to avoid the below warning:
# UserWarning: Supervisord is running as root and it is searching
# for its configuration file in default locations (including its current working directory);
# you probably want to specify a "-c" argument specifying
# an absolute path to a configuration file for improved security.
#
# We run it with `exec` so that it respond to Ctrl+z (SIGINT)
#
SUPERVISOR_CONF_PATH=${SUPERVISOR_CONF_PATH:-/supervisord.conf}
exec supervisord -c "$SUPERVISOR_CONF_PATH"
